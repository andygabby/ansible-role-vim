---
- name: Include OS family specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Install helper packages for specific OS Families
  include: setup_Debian.yml
  when: ansible_os_family == "Debian"

- name: Define vim packages
  set_fact:
    vim_package: "{{ __vim_package }}"
  when: vim_package is not defined

- name: Install vim and git
  become: true
  become_method: sudo
  package:
    name: "{{ item }}"
    state: present
  with_items:
      - "{{ vim_package }}"
      - git

- name: Setup the vim config folders
  file:
    state: directory
    recurse: yes
    path: "~/.vim/{{ item }}"
  with_items:
    - autoload
    - bundle
    - colors
    - compiler
    - ftplugin
    - indent
    - keymap
    - lang
    - macros
    - plugin
    - syntax
    - tools

- name: Check if .vimrc exists
  stat:
    path: "~/.vimrc"
  register: stat_vim

- name: Ensure .vimrc exists
  file:
    state: touch
    path: "~/.vimrc"
  when: stat_vim.stat.islnk is undefined and stat_vim.stat.islnk == False

- name: Get my vimrc
  get_url:
    url: "{{ vim_upstream_vimrc }}"
    dest: "~/.vimrc"
    mode: 0644
    force: yes
  when: vim_use_upstream_vimrc is defined and vim_use_upstream_vimrc

- name: Install Pathogen
  get_url:
    url: https://tpo.pe/pathogen.vim
    dest: "~/.vim/autoload/pathogen.vim"
    mode: 0664

- name: Install plugin list
  git:
    repo: "https://github.com/{{ item.name }}/{{ item.repo }}.git"
    dest: "~/.vim/bundle/{{ item.repo }}"
    update: no
  with_items:
    - "{{ vim_plugins }}"
...
